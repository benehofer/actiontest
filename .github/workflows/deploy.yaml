#<DOC>
#The deploy pipeline is the main pipeline of the Devops environment. It is triggered by push events 
#on the branches. The trigger also has the prerequisite that artefacts in one or more of the repository 
#folders "iac", "ps" and "dat" have been changed. The pipeline ensures that the deployment steps are 
#executed in the correct order and with the correct dependencies on each other.<br/>The pipeline 
#jobs exclusively use "reusable workflows", i.e. the individual jobs call other pipelines with 
#corresponding parameters.
#</DOC>
name: 'deploy'

on:
  push:
    branches:
      - 'main'
      - 'feature/**'
    paths:
      - 'iac/**'
      - 'ps/**'
      - 'dat/**'

jobs:
  detect-change:
    uses: ./.github/workflows/template-detect-change.yaml

  build-iac:
    needs: detect-change
    if: ${{ needs.detect-change.outputs.iac == 'true'}}
    uses: ./.github/workflows/template-build.yaml
    with:
      doenv: "${{ github.ref == 'refs/heads/main' && 'Production' || 'Integration' }}-plan"
      artifacttype: 'iac'

  build-ps:
    needs: detect-change
    if: ${{ needs.detect-change.outputs.ps == 'true'}}
    uses: ./.github/workflows/template-build.yaml
    with:
      doenv: "${{ github.ref == 'refs/heads/main' && 'Production' || 'Integration' }}-plan"
      artifacttype: 'ps'
    
  build-dat:
    needs: detect-change
    if: ${{ needs.detect-change.outputs.dat == 'true'}}
    uses: ./.github/workflows/template-build.yaml
    with:
      doenv: "${{ github.ref == 'refs/heads/main' && 'Production' || 'Integration' }}-plan"
      artifacttype: 'dat'

  build-doc:
    needs: detect-change
    if: ${{ needs.detect-change.outputs.iac == 'true' || needs.detect-change.outputs.ps == 'true' || needs.detect-change.outputs.dat == 'true'  }}
    uses: ./.github/workflows/template-build.yaml
    with:
      doenv: "${{ github.ref == 'refs/heads/main' && 'Production' || 'Integration' }}-plan"
      artifacttype: 'doc'

  build-tst:
    needs: detect-change
    if: ${{ needs.detect-change.outputs.iac == 'true' || needs.detect-change.outputs.ps == 'true' || needs.detect-change.outputs.dat == 'true'  }}
    uses: ./.github/workflows/template-build.yaml
    with:
      doenv: "${{ github.ref == 'refs/heads/main' && 'Production' || 'Integration' }}-plan"
      artifacttype: 'tst'
  
  plan-iac:
    needs: build-iac
    permissions:
      contents: 'read'
      id-token: 'write'
    uses: ./.github/workflows/template-deploy.yaml
    with:
      doenv: "${{ github.ref == 'refs/heads/main' && 'Production' || 'Integration' }}-plan"
      workflowtype: iac
      mode: plan
    secrets: inherit      

  apply-iac:
    needs: [build-iac,plan-iac]
    permissions:
      contents: 'read'
      id-token: 'write'
    uses: ./.github/workflows/template-deploy.yaml
    with:
      doenv: "${{ github.ref == 'refs/heads/main' && 'Production' || 'Integration' }}"
      workflowtype: iac
      mode: apply
    secrets: inherit      

  plan-dat:
    needs: [build-dat, plan-iac, apply-iac]
    if: ${{  always() && !cancelled() && !contains(needs.*.result, 'failure') && contains(needs.build-dat.result,'success')  }}
    permissions:
      contents: 'read'
      id-token: 'write'
    uses: ./.github/workflows/template-deploy.yaml
    with:
      doenv: "${{ github.ref == 'refs/heads/main' && 'Production' || 'Integration' }}-plan"
      workflowtype: dat
      mode: plan
    secrets: inherit
    
  apply-dat:
    needs: [build-dat, plan-iac, apply-iac, plan-dat]
    if: ${{  always() && !cancelled() && !contains(needs.*.result, 'failure') && contains(needs.plan-dat.result,'success')  }}
    permissions:
      contents: 'read'
      id-token: 'write'
    uses: ./.github/workflows/template-deploy.yaml
    with:
      doenv: "${{ github.ref == 'refs/heads/main' && 'Production' || 'Integration' }}"
      workflowtype: dat
      mode: apply
    secrets: inherit
  
  apply-ps:
    needs: [build-ps, plan-iac, apply-iac, plan-dat, apply-dat]
    if: ${{  always() && !cancelled() && !contains(needs.*.result, 'failure') && contains(needs.build-ps.result,'success')  }}
    permissions:
      contents: 'read'
      id-token: 'write'
    uses: ./.github/workflows/template-deploy.yaml
    with:
      doenv: "${{ github.ref == 'refs/heads/main' && 'Production' || 'Integration' }}"
      workflowtype: ps
      mode: apply
    secrets: inherit      
  
  apply-doc:
    needs: [build-doc, plan-iac, apply-iac, plan-dat, apply-dat, apply-ps]
    if: ${{  always() && !cancelled() && !contains(needs.*.result, 'failure') && contains(needs.build-doc.result,'success')  }}
    permissions:
      contents: 'read'
      id-token: 'write'
    uses: ./.github/workflows/template-deployswa.yaml
    with:
      doenv: "${{ github.ref == 'refs/heads/main' && 'Production' || 'Integration' }}-plan"
      workflowtype: doc
      mode: apply
    secrets: inherit