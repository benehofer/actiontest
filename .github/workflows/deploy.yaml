name: 'integration'

on:
  push:
    branches:
      - 'main'
      - 'feature/**'
    paths:
      - 'iac/**'
      - 'ps/**'

jobs:
  detect-change:
    runs-on: ubuntu-latest
    outputs:
      iac: ${{ steps.filter.outputs.iac }}
      ps: ${{ steps.filter.outputs.ps }}
    steps:
    - uses: actions/checkout@v3
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          iac:
            - 'iac/**'
          ps:
            - 'ps/**'
        base: ${{ github.ref }}

  build-iac:
    runs-on: windows-latest
    needs: detect-change
    if: ${{ needs.detect-change.outputs.iac == 'true'}}
    steps:
      - uses: actions/checkout@v4
      - name: Build iac
        shell: pwsh
        run: .\devops\iac\build.ps1
        env:
            environment: 'WagnerTest'
      - uses: actions/upload-artifact@v4
        with:
          name: iac-build
          path: deployment\iac\**
          retention-days: 5

  build-ps:
#    runs-on: windows-latest
    needs: detect-change
    if: ${{ needs.detect-change.outputs.ps == 'true'}}
    uses: ./.github/workflows/template-deploy-iac.yaml
    with:
      artifacttype: 'ps'
      artifactname: 'ps-build'

#    steps:
#      - uses: actions/checkout@v4
#      - name: Build ps
#        shell: pwsh
#        run: .\devops\ps\build.ps1
#        env:
#            mode: 'plan'
#      - uses: actions/upload-artifact@v4
#        with:
#          name: ps-build
#          path: deployment\ps\**
#          retention-days: 5    

  plan-integration-iac:
    needs: build-iac
    uses: ./.github/workflows/template-deploy-iac.yaml
    with:
      artifactname: 'iac-build'
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          sparse-checkout: |
#            devops
#      - uses: actions/download-artifact@v4
#        with:
#          name: iac-build
#      - name: Build iac
#        shell: pwsh
#        run: .\devops\iac\deploy.ps1
#        env:
#          mode: 'plan'
#          environment: 'WagnerTest'

  apply-integration-iac:
    runs-on: windows-latest
    environment: Integration
    needs: [build-iac, plan-integration-iac]
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            devops
      - uses: actions/download-artifact@v4
        with:
          name: iac-build
      - name: Build iac
        shell: pwsh
        run: .\devops\iac\deploy.ps1
        env:
          mode: 'apply'
          environment: 'WagnerTest'
  
  apply-integration-ps:
    runs-on: windows-latest
    environment: integration
    needs: [build-ps, plan-integration-iac, apply-integration-iac]
    if: ${{  always() && !cancelled() && !contains(needs.*.result, 'failure') && contains(needs.build-ps.result,'success')  }}
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            devops
      - uses: actions/download-artifact@v4
        with:
          name: ps-build
      - name: Build ps
        shell: pwsh
        run: .\devops\ps\deploy.ps1
        env:
          mode: 'apply'
          environment: 'Integration'
