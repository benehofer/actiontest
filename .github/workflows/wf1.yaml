name: 'deploy iac'

on:
  push:
    branches:
      - 'main'
      - 'feature/**'
    paths:
      - 'iac/**'
      - 'ps/**'

jobs:
  detect-change:
    runs-on: ubuntu-latest
    outputs:
      iac: ${{ steps.filter.outputs.iac }}
      ps: ${{ steps.filter.outputs.ps }}
    steps:
    - uses: actions/checkout@v3
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          iac:
            - 'iac/**'
          ps:
            - 'ps/**'
        base: ${{ github.ref }}

  build-iac:
    runs-on: windows-latest
    needs: detect-change
    if: ${{ needs.detect-change.outputs.iac == 'true'}}
    steps:
      - uses: actions/checkout@v3
      - name: Build iac
        shell: pwsh
        run: .\devops\iac\build.ps1
        env:
            environment: 'WagnerTest'
      - uses: actions/upload-artifact@v4
        with:
          name: iac-build
          path: deployment\iac\**
          retention-days: 5

  build-ps:
    runs-on: windows-latest
    needs: detect-change
    if: ${{ needs.detect-change.outputs.ps == 'true'}}
    steps:
      - uses: actions/checkout@v3
      - name: Build ps
        shell: pwsh
        run: .\devops\ps\build.ps1
        env:
            mode: 'plan'
      - uses: actions/upload-artifact@v4
        with:
          name: ps-build
          path: deployment\ps\**
          retention-days: 5    

  plan-integration-iac:
    runs-on: windows-latest
    needs: build-iac
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: iac-build
      - name: Build iac
        shell: pwsh
        run: .\devops\iac\deploy.ps1
        env:
          mode: 'plan'
          environment: 'WagnerTest'

  apply-integration-iac:
    runs-on: windows-latest
    needs: [build-iac, plan-integration-iac]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: iac-build
      - name: Build iac
        shell: pwsh
        run: .\devops\iac\deploy.ps1
        env:
          mode: 'apply'
          environment: 'WagnerTest'
  
  apply-integration-ps:
    runs-on: windows-latest
    needs: [build-ps]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: ps-build
      - name: Build ps
        shell: pwsh
        run: .\devops\ps\deploy.ps1
        env:
          mode: 'apply'
          environment: 'Integration'
